CREATE DATABASE uaa_deadline_notifier;

-- public.activity definition

-- Drop table

-- DROP TABLE public.activity;

CREATE TABLE public.activity (
	id int4 NOT NULL, -- ID único de la actividad (código generado por UAA)
	title varchar(255) NOT NULL, -- Título descriptivo de la actividad
	course_id int4 NOT NULL, -- Código identificador del curso
	course_title varchar(255) NOT NULL, -- Título del curso al que pertenece la actividad
	"type" varchar(255) NOT NULL, -- Tipo de actividad: QUIZ o ASSIGN
	url varchar(255) NOT NULL, -- URL de acceso a la actividad en e-campus
	opening_timestamp timestamptz NULL, -- Fecha y hora de apertura de la actividad (TIMESTAMPTZ)
	closing_timestamp timestamptz NOT NULL, -- Fecha y hora de cierre o vencimiento de la actividad (TIMESTAMPTZ)
	CONSTRAINT activity_pkey PRIMARY KEY (id),
	CONSTRAINT activity_type_check CHECK (((type)::text = ANY ((ARRAY['QUIZ'::character varying, 'ASSIGN'::character varying, 'FORUM'::character varying])::text[])))
);

-- Column comments

COMMENT ON COLUMN public.activity.id IS 'ID único de la actividad (código generado por UAA)';
COMMENT ON COLUMN public.activity.title IS 'Título descriptivo de la actividad';
COMMENT ON COLUMN public.activity.course_id IS 'Código identificador del curso';
COMMENT ON COLUMN public.activity.course_title IS 'Título del curso al que pertenece la actividad';
COMMENT ON COLUMN public.activity."type" IS 'Tipo de actividad: QUIZ o ASSIGN';
COMMENT ON COLUMN public.activity.url IS 'URL de acceso a la actividad en e-campus';
COMMENT ON COLUMN public.activity.opening_timestamp IS 'Fecha y hora de apertura de la actividad (TIMESTAMPTZ)';
COMMENT ON COLUMN public.activity.closing_timestamp IS 'Fecha y hora de cierre o vencimiento de la actividad (TIMESTAMPTZ)';

-- public.notification definition

-- Drop table

-- DROP TABLE public.notification;

CREATE TABLE public.notification (
	id int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL, -- ID único de la notificación
	activity_id int4 NOT NULL, -- Identificador de la actividad asociada
	send_at timestamptz NOT NULL, -- Fecha y hora programada para el envío de la notificación
	status varchar(255) DEFAULT 'PENDING'::character varying NULL, -- Estado actual de la notificación: PENDING, SENT o FAILED
	created_at timestamptz DEFAULT now() NULL, -- Fecha y hora de creación del registro
	CONSTRAINT notification_pkey PRIMARY KEY (id),
	CONSTRAINT notification_status_check CHECK (((status)::text = ANY ((ARRAY['PENDING'::character varying, 'SENT'::character varying, 'FAILED'::character varying])::text[])))
);

-- Column comments

COMMENT ON COLUMN public.notification.id IS 'ID único de la notificación';
COMMENT ON COLUMN public.notification.activity_id IS 'Identificador de la actividad asociada';
COMMENT ON COLUMN public.notification.send_at IS 'Fecha y hora programada para el envío de la notificación';
COMMENT ON COLUMN public.notification.status IS 'Estado actual de la notificación: PENDING, SENT o FAILED';
COMMENT ON COLUMN public.notification.created_at IS 'Fecha y hora de creación del registro';


-- public.notification foreign keys

ALTER TABLE public.notification ADD CONSTRAINT fk_notification_activity FOREIGN KEY (activity_id) REFERENCES public.activity(id) ON DELETE RESTRICT ON UPDATE RESTRICT;